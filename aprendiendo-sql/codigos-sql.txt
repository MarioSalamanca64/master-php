en consola 
status- ver el usuarios y la actalizacion 

create database nombredelabasededatos- crear base de datos

show databases; - ver todas las tablas de sql guardadas

use nombredelabasededatos - entrar en la base de datos

drop database nombredelabasededatos - borrar base de datos
drop table nombredelabasededatos; - borrar table de datos

tipos de datos de las bace de datos

int - entero (cifras)
integer - entero (cifras) max 4294967295
varchar - stringalfanumerico (caracteres) max 255
char - stringalfanumerico (cararteres)
float - decimal (cifrasdecimales) 
date,time,timestamp - (fecha)

strings masgrandes
text 65535
MEDIUMTEXT 16 millones carateres
longtext 4millones caracteres

Enteros mas grandes 
mediumint
bigint

CREATE TABLE nombredelatabla(
id int(11) auto_increment(se auto incrementa cada nuevo archivo) not null (siempre tiene que tener un dato),

nombre varchar(100) null, (puede ser nulo) - numero de carateres dentro del parentesis

apellidos varchar(255) default'hola que tal', -rellena con hola que tal 

email varchar(255) null - campo email despues se pone restricion unico  

CONSTRAINT pk_nombredebasededatos PRIMARY KEY (id)- para que sea auto incrementable
); - ejemplo de crear

desc nombredelabasededatos; - mostara como esta toda la base de datos

ALTER TABLE nombredebasededatos RENAME TO nombredebasededdatosrenombrada; - renombrar tabla
ALTER TABLE nombredebasededatos CHANGE apellidos apellido varchar(100) null; - renombra un fila

SELECT * FROM nombredelatabla; - muestra todos los usuarios o archivos de la tabla 

ALTER TABLE nombredelatabla MODIFY apellido char(50) not null; - cambia restricciones o formatos dela columna

DESCRIBE nombredelatabla; -muestra los formatos de los campos ejemplo char,varchar,etc

ALTER TABLE nombredelatabla ADD nuevanombredelafila varchar (100) null; - para añadir una nueva fila ala tabla

ALTER TABLE nombredelatabla ADD CONSTRAINT uq_email UNIQUE(email); - añadir una nueva restriccion

ALTER TABLE nombredelatabla DROP website; - borrar una columna llamado website

para conectar una base de datos con otra el ejemplo == campo id tabla usuarios campo usuarios_id tabla entradas

los dos campos deben de tener las  mismas restricciones 

ejemplo de una conexion en la tabla de entradas usa un clave foranea o de otra tabla -- de entradas a usuario

creacion de la categoria usuarios_id en la tabla entradas se conecta a usuarios

alfinal de la tabla codigo == CONSTRAINT fk_entrada_usuario FOREIGN KET (usuario_id) REFERENCES usuario(id)

hace que puedas hacer una accion en una tabla y lo haga en la que esta conectada ejemplo eliminar un archivo y se elimine en la otra 

CONSTRAINT fk_entrada_usuario FOREIGN KET (usuario_id) REFERENCES usuario(id) ON DELETE CASCADE 

actualizar en una base de datos a otra 

CONSTRAINT fk_entrada_usuario FOREIGN KET (usuario_id) REFERENCES usuario(id) ON UPDATE CASCADE 

en este caso que se ponga con una restrcion despues de aplicar el codigo

CONSTRAINT fk_entrada_usuario FOREIGN KET (usuario_id) REFERENCES usuario(id) ON DELETE CASCADE DEFAULT -- como estaba 

CONSTRAINT fk_entrada_usuario FOREIGN KET (usuario_id) REFERENCES usuario(id) ON DELETE CASCADE NULL -- nulo 	

formato para que las tablas se puedan conectarlas unas otras 

alfinal del codigo == )ENGINE=InnoDb;

hace mas rapida las consultas en escalas grandes muchos select no da muy bien las conexion con otras bases

alfinal del codigo == )ENGINE=MYISAM;

--insertar datos ala tabla--

nuevos registros

INSERT INTO nombredetabla(usuario) VALUES(null,'mario','apellidos','juan@email','1234','01-05-2019'); -- depende de los datos que tenga la tabla

insertar solo algunas columnas 

INSERT INTO usuario(email,password) VALUES('juan@email','1234'); -- los demas campos deberian deser null si no saltara un error 

--mostrar todos los registros de una tabla--

SELECT email , nombre , apellidos FROM nombredelatabla; -- sacar los datos especificos de una tabla 

--operadores--

SELECT email,(4+7) AS 'operacion' FROM usuarios; -- te aparece la suma AS es el nombre del campo de la suma,resta,multi,etc (alias)

SELECT id,email,(id+7) AS 'operacion' FROM usuarios ORDER BY id; -- ORDER o ASC BY ordena el numero de los id de manera desendente 1234 -- suma el numero al id

--funciones aritmeticas(sql function math buscar en google)--

SELECT ABS(7) AS 'operaciones' FROM nombredelatabla;--valor absoluto

SELECT CELL(7) AS 'operaciones' FROM nombredelatabla;-- redondeo decimales

SELECT UPPER(nombre) FROM nombredelatabla; -- para poner todo en mayusculas -- LOWER minusculas

       LOWER

SELECT CONCAT(nombre,' ',apellidos)AS 'nombre y apellido' FROM nombredelatabla; --concatenar nombre y apellidos CONCAT

SELECT email, LENGTH(CONCAT(nombre,' ',apellidos)) AS 'nombre y apellido' FROM nombredelatabla;-- mostar email cuantas letras tiene en nombre y apellidos LENGTH 

SELECT TRIM(CONCAT(nombre,' ',apellidos)) AS 'nombre y apellido' FROM nombredelatabla; --quita espacios enfrente y atras TRIM

SELECT email, fecha, CURDATE() AS'fecha actual' FROM nombredetabla;-- muestra la fecha actual CURDATE()

SELECT email, DATEDIFF(fecha, CURDATE()) AS'fecha actual' FROM nombredetabla;-- fecha en la que se hizo el archivo DATEDIFF 

en este caso pondra los dias de diferencia entre fecha actual y fecha creada

SELECT email, DAYNAME(fecha) AS'fecha actual' FROM nombredetabla;-- dia en que se registro DAYNAME

              DAYOFMONTH                                         -- mes en que se registro DAYOFMONTH

	      DATOFWEEK                                          -- dia de la semana

	      DAYOFYEAR                                          -- dia del año

	      MONTH                                              -- mes del a;o

	      YEAR                                               -- a;o

              DAY                                                -- dia

	      HOUR                                               -- hora

              CURTIME()                                          -- hora actual

	      SYSDATE                                            -- hora completa

	      DATE_FORMAT(fecha, '%d-%m-%Y')			 --Formatear la fecha para que este como en lat y no como en estados unidos

	      ISNULL(apellidos) FROM nombredelatabla;            --para ver si hay un valor nullo en algun apellido 0false 1true

	      STRCMO('valor1','valor2')			 -- si hay registros iguales 0false 1true

SELECT VERSION() FROM nombredelatabla; --que version de sql esta echa la tabla 
      
       USER()                          --que usuario esta usando esa tabla

DISTINCT                               --Para que no se repitan los nombres de usuario va delate de USER

         DATABASE()                    --Base de datos que usamos en este momento

         IFNULL(apellidos,'Este campo esta vacio') --pone ese texto en campos que sean null o esten vacios no lleva DISTINCT

--CONDICIONES--

SELECT * FROM usuarios WHERE emai = 'admin@admin.com'; -- busca todos los usuarios  WHERE que tengan el email admin@admin.com con el WHERE 

Operadores  igual = -- distinto != -- menor< -- >mayor -- menor o igual  <= -- mayor o igual <= -- entre between a and b -- en in -- es nulo is null

no nulo  is not null-- como like  -- distinto not like 

SELECT nombre,apellido  FORM usuarios WHERE YEAR (fecha) = 2019; muestrame solo los archivos que fueron creados en 2019 

SELECT nombre,apellido  FORM usuarios WHERE YEAR (fecha) != 2019 OR ISNULL(fecha); muestra los archivos diferentes a 2019 o que tengan valor null

--operadores logicos--

O  OR

Y  AND

NO NOT

--comodines like--

cualquier cantidad de caracteres %

un caracter desconosido _ 


SELECT email FROM usuarios WHERE apellido = LIKE '%a%' AND password = 1234;-- busca todos los usuarios que tengan a en su apellido y su contrase;a sea 1234

SELECT * FROM usuarios LIMIT 0,4; -- obten de la linea 0 a 4 de la tabla LIMIT

--modificar filas o actualizar--

UPDATE usuarios SET fecha=CURDATE(),apellidos'ADMIN' WHERE id=4;-- set es actuliza ala fecha actual 

y cambia el apellido a admin cuando el id sea 4

--eliminar registros--

DELETE FROM usuarios WHERE email = 'admin@admin.com';--eliminara la columna que tenga ese email

--consultas de agrupamiento--

SELECT COUNT(titulo) AS 'NOMBRE DE ENTRADAS', categoria_id FROM entradas GROUP BY categoria_id--muestra los titulos de la otra table cuantos hay en las 

diferentes categorias GROUP BY

SELECT COUNT(titulo) AS 'NUMERO DE ENTRADAS', categoria_id FROM entradas GROUP BY categoria_id HAVING COUNT(TITULO)>=4; 

-- obtener el total de los titulos por categoria mayor a 4 en cosulta multi tablas no se puede utilizar el WHRE en este caso se usa HAVING 

AVG sacar la media 

COUNT contar el numero de elementos

MAX valormaximo del grupo

MIN valor minimo del grupo

--subconsulta se ejecutan dentro de otras utiliza los resultados otra tabla opera en la consulta principal--

SELECT * FROM usuarios WHERE id IN (SELECT usuario_id FROM entradas); -- obten todos los usuarios IN cuando  exista en la tabla entradas

SELECT * FROM usuarios WHERE id NOT IN (SELECT usuario_id FROM entradas); -- obten todos los usuarios  NOT IN que no existan en la tabla entradas

SELECT nombre,apellidos FROM usuarios WHERE id IN (SELECT usuario_id FROM entradas WHERE titulo LIKE "%GTA%"); 

saca el nombre y apellido de los usuarioas que escribieron de GTA





   











 

